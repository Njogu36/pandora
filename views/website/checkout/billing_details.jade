extend ../layout.jade 
block content
 .generalPageWrapper.layout--columnsOneVTwo
  #BeforeMainContainer.row
    .row__container
  #contentrow.row
    .row__container
      #contentiInnerRow.clearfix
        script.
          //this is a way to share localization strings in onepagecheckout.js
          var localization = {
          pleaseUsePostCoderString: 'Please use address search',
          pleaseUsePostCoderTitle: 'Warning',
          fillInYourAddressManuallyString: 'Fill in your address manually',
          fillInYourAddressManuallyPrefix: 'Weâ€™re sorry, we were unable to find your address. Please enter the details manually instead.',
          postCoderNotConfigured: 'The address provider plugin is not correctly configured, please contact the administrator.'
          };
          var isPostCoderConfiguredProperly = true;
        .one-page-checkout
          
          .checkout-page.grid_12
            .catfish-container
              .checkout-data
                ol#checkoutSteps.opc
                  li#opc-billing.section.allow.clearfix.active
                    .sectionheader.clearfix
                      .number 1
                      .step-title
                        h2.title.is-spaced.has-text-centered Billing address
                    #checkout-step-billing.step.a-item(style='')
                      form#co-billing-form(action='' novalidate='novalidate')
                        #checkout-billing-load
                          .checkout-data
                            .enter-address
                              .enter-address-body
                                .enter-address-body__selector
                                  label(for='billing-address-select') Select a billing address.
                                  div
                                    select#billing-address-select.address-select.catfish-select.valid(name='billing_address_id' title='' onchange='Billing.showAddressForm()' aria-invalid='false')
                                      
                                      if  user.address_line_1 !== '' &&  user.address_line_2 !== '' &&  user.town !== '' &&  user.country !== '' &&  user.postcode !== ''
                                       option(value="") #{user.address_line_1},#{user.address_line_2} , #{user.town} , #{user.country}, #{user.postcode}
                                        
                                      
                                .clear
                                #billing-new-address-form.block.edit-address(data-form-field-prefix='BillingNewAddress' style='display: none;')
                                  script(type='text/javascript').
                                    function postCoderSelectValueCallback(){
                                    if (typeof(postCoderValueSelectedEvent) !== 'undefined'){
                                    postCoderValueSelectedEvent();
                                    }
                                    }
                                    function postCoderWarningCallback(self, status, code, message, detail){
                                    if (typeof(postCoderReturnWarningsEvent) !== 'undefined'){
                                    postCoderReturnWarningsEvent(status, code, message, detail);
                                    }
                                    }
                                  script(type='text/javascript').
                                    function LoadCounties(callback) {
                                    var selectedItem = $("#BillingNewAddress_CountryId").val();
                                    if (selectedItem) {
                                    var ddlStates = $("#BillingNewAddress_StateProvinceId");
                                    var statesProgress = $("#states-loading-progress");
                                    statesProgress.show();
                                    $.ajax({
                                    cache:false,
                                    type: "GET",
                                    url: "/Country/GetStatesByCountryId",
                                    data: {countryId: selectedItem},
                                    success: function (data) {
                                    ddlStates.html('');
                                    $.each(data, function (id, option) {
                                    var optionElement = $('<option>', { value: option.id, html: option.name });
                                    if (option.abbreviation){
                                    optionElement.attr("data-abbreviation", option.abbreviation);
                                    }
                                    ddlStates.append(optionElement);
                                    });
                                    statesProgress.hide();
                                    if (callback) {
                                    console.log('Execute callback');
                                    callback();
                                    }
                                    },
                                    error:function (xhr, ajaxOptions, thrownError) {
                                    alert('Failed to retrieve states.');
                                    statesProgress.hide();
                                    }
                                    });
                                    }
                                    }
                                    $(function() {
                                    $("#BillingNewAddress_CountryId").change(function (e) {
                                    // stop propagation
                                    e.preventDefault();
                                    LoadCounties.call(this);
                                    });
                                    });
                                  input#BillingNewAddress_Id(data-val='true' data-val-number='The field Id must be a number.' data-val-required="'Id' must not be empty." name='BillingNewAddress.Id' type='hidden' value='0')
                                  input#BillingNewAddress_FirstNameDisabled(data-val='true' data-val-required="'First Name Disabled' must not be empty." name='BillingNewAddress.FirstNameDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_LastNameDisabled(data-val='true' data-val-required="'Last Name Disabled' must not be empty." name='BillingNewAddress.LastNameDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_EmailDisabled(data-val='true' data-val-required="'Email Disabled' must not be empty." name='BillingNewAddress.EmailDisabled' type='hidden' value='True')
                                  input#BillingNewAddress_CompanyDisabled(data-val='true' data-val-required="'Company Disabled' must not be empty." name='BillingNewAddress.CompanyDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_CountryDisabled(data-val='true' data-val-required="'Country Disabled' must not be empty." name='BillingNewAddress.CountryDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_StateProvinceDisabled(data-val='true' data-val-required="'State Province Disabled' must not be empty." name='BillingNewAddress.StateProvinceDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_CityDisabled(data-val='true' data-val-required="'City Disabled' must not be empty." name='BillingNewAddress.CityDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_Address1Disabled(data-val='true' data-val-required="'Address1 Disabled' must not be empty." name='BillingNewAddress.Address1Disabled' type='hidden' value='False')
                                  input#BillingNewAddress_Address2Disabled(data-val='true' data-val-required="'Address2 Disabled' must not be empty." name='BillingNewAddress.Address2Disabled' type='hidden' value='False')
                                  input#BillingNewAddress_ZipPostalCodeDisabled(data-val='true' data-val-required="'Zip Postal Code Disabled' must not be empty." name='BillingNewAddress.ZipPostalCodeDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_PhoneNumberDisabled(data-val='true' data-val-required="'Phone Number Disabled' must not be empty." name='BillingNewAddress.PhoneNumberDisabled' type='hidden' value='False')
                                  input#BillingNewAddress_FaxNumberDisabled(data-val='true' data-val-required="'Fax Number Disabled' must not be empty." name='BillingNewAddress.FaxNumberDisabled' type='hidden' value='True')
                                  input#BillingNewAddress_CountryHidden(data-val='true' data-val-required="'Country Hidden' must not be empty." name='BillingNewAddress.CountryHidden' type='hidden' value='False')
                                  input#BillingNewAddress_StateProvinceRequired(data-val='true' data-val-required="'State Province Required' must not be empty." name='BillingNewAddress.StateProvinceRequired' type='hidden' value='False')
                                  span#additional-table-message-container-id
                                  table.table-container.address-table-container
                                    tbody
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_FirstName') First name
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_FirstName.catfish-input(name='BillingNewAddress.FirstName' placeholder='First name' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.FirstName' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_LastName') Last name
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_LastName.catfish-input(name='BillingNewAddress.LastName' placeholder='Last name' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.LastName' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          label(for='BillingNewAddress_Company') Company
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_Company.catfish-input(name='BillingNewAddress.Company' placeholder='Company' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.Company' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_Address1') Address Line 1
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_Address1.catfish-input(name='BillingNewAddress.Address1' placeholder='Address Line 1' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.Address1' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          label(for='BillingNewAddress_Address2') Address Line 2
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_Address2.catfish-input(name='BillingNewAddress.Address2' placeholder='Address Line 2' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.Address2' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_City') Town
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_City.catfish-input(name='BillingNewAddress.City' placeholder='Town' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.City' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_CountryId') Country
                                        td.item-value
                                          select#BillingNewAddress_CountryId.catfish-select(data-val='true' data-val-number='The field Country must be a number.' name='BillingNewAddress.CountryId')
                                            option(selected='selected' value='80' data-zipcoderegex='^([Gg][Ii][Rr] 0[Aa]{2})|((([A-Za-z][0-9]{1,2})|(([A-Za-z][A-Ha-hJ-Yj-y][0-9]{1,2})|(([A-Za-z][0-9][A-Za-z])|([A-Za-z][A-Ha-hJ-Yj-y][0-9]?[A-Za-z])))) {0,1}[0-9][A-Za-z]{2})$' data-twoletterisocode='GB') United Kingdom
                                            option(value='1' data-zipcoderegex='^([0-9]{5})(?:[-\s]*([0-9]{4}))?$' data-twoletterisocode='US') United States
                                            option(value='2' data-zipcoderegex='.*' data-twoletterisocode='CA') Canada
                                            option(value='87' data-zipcoderegex='.*' data-twoletterisocode='AL') Albania
                                            option(value='88' data-zipcoderegex='.*' data-twoletterisocode='DZ') Algeria
                                            option(value='6' data-zipcoderegex='.*' data-twoletterisocode='AU') Australia
                                            option(value='12' data-zipcoderegex='.*' data-twoletterisocode='BE') Belgium
                                            option(value='18' data-zipcoderegex='.*' data-twoletterisocode='BG') Bulgaria
                                            option(value='26' data-zipcoderegex='.*' data-twoletterisocode='CY') Cyprus
                                            option(value='27' data-zipcoderegex='.*' data-twoletterisocode='CZ') Czech Republic
                                            option(value='28' data-zipcoderegex='.*' data-twoletterisocode='DK') Denmark
                                            option(value='32' data-zipcoderegex='.*' data-twoletterisocode='FI') Finland
                                            option(value='33' data-zipcoderegex='.*' data-twoletterisocode='FR') France
                                            option(value='34' data-zipcoderegex='.*' data-twoletterisocode='GE') Georgia
                                            option(value='35' data-zipcoderegex='.*' data-twoletterisocode='DE') Germany
                                            option(value='36' data-zipcoderegex='.*' data-twoletterisocode='GI') Gibraltar
                                            option(value='37' data-zipcoderegex='.*' data-twoletterisocode='GR') Greece
                                            option(value='132' data-zipcoderegex='.*' data-twoletterisocode='GL') Greenland
                                            option(value='142' data-zipcoderegex='.*' data-twoletterisocode='IS') Iceland
                                            option(value='43' data-zipcoderegex='.*' data-twoletterisocode='IE') Ireland
                                            option(value='45' data-zipcoderegex='.*' data-twoletterisocode='IT') Italy
                                            option(value='49' data-zipcoderegex='.*' data-twoletterisocode='KZ') Kazakhstan
                                            option(value='150' data-zipcoderegex='.*' data-twoletterisocode='LV') Latvia
                                            option(value='156' data-zipcoderegex='.*' data-twoletterisocode='LT') Lithuania
                                            option(value='157' data-zipcoderegex='.*' data-twoletterisocode='LU') Luxembourg
                                            option(value='164' data-zipcoderegex='.*' data-twoletterisocode='MT') Malta
                                            option(value='171' data-zipcoderegex='.*' data-twoletterisocode='MD') Moldova
                                            option(value='172' data-zipcoderegex='.*' data-twoletterisocode='MC') Monaco
                                            option(value='54' data-zipcoderegex='.*' data-twoletterisocode='NL') Netherlands
                                            option(value='159' data-zipcoderegex='.*' data-twoletterisocode='MK') North Macedonia
                                            option(value='56' data-zipcoderegex='.*' data-twoletterisocode='NO') Norway
                                            option(value='61' data-zipcoderegex='.*' data-twoletterisocode='PL') Poland
                                            option(value='62' data-zipcoderegex='.*' data-twoletterisocode='PT') Portugal
                                            option(value='69' data-zipcoderegex='.*' data-twoletterisocode='SK') Slovakia
                                            option(value='70' data-zipcoderegex='.*' data-twoletterisocode='SI') Slovenia
                                            option(value='72' data-zipcoderegex='.*' data-twoletterisocode='ES') Spain
                                            option(value='73' data-zipcoderegex='.*' data-twoletterisocode='SE') Sweden
                                            option(value='74' data-zipcoderegex='.*' data-twoletterisocode='CH') Switzerland
                                            option(value='78' data-zipcoderegex='.*' data-twoletterisocode='UA') Ukraine
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.CountryId' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          label(for='BillingNewAddress_StateProvinceId') County
                                          | :
                                        td.item-value
                                          select#BillingNewAddress_StateProvinceId.catfish-select(data-val='true' data-val-number='The field County must be a number.' name='BillingNewAddress.StateProvinceId')
                                            option(value='') Please select
                                            option(value='148' data-abbreviation='ABD') Aberdeenshire
                                            option(value='125' data-abbreviation='AGY') Anglesey
                                            option(value='149' data-abbreviation='ANS') Angus
                                            option(value='221') Antrim
                                            option(value='227' data-abbreviation='ANT') Antrim
                                            option(value='150' data-abbreviation='ARL') Argyll
                                            option(value='228' data-abbreviation='ARM') Armagh
                                            option(value='222') Armagh
                                            option(value='151' data-abbreviation='AYR') Ayrshire
                                            option(value='152' data-abbreviation='BAN') Banffshire
                                            option(value='77' data-abbreviation='BDF') Bedfordshire
                                            option(value='165' data-abbreviation='BRK') Berkshire
                                            option(value='153' data-abbreviation='BEW') Berwickshire
                                            option(value='126' data-abbreviation='BRE') Breconshire
                                            option(value='78' data-abbreviation='BKM') Buckinghamshire
                                            option(value='154' data-abbreviation='BUT') Buteshire
                                            option(value='127' data-abbreviation='CAE') Caernarvonshire
                                            option(value='155' data-abbreviation='CAI') Caithness
                                            option(value='79' data-abbreviation='CAM') Cambridgeshire
                                            option(value='128' data-abbreviation='CGN') Cardiganshire
                                            option(value='129' data-abbreviation='CMN') Carmarthenshire
                                            option(value='80' data-abbreviation='CHS') Cheshire
                                            option(value='156' data-abbreviation='CLK') Clackmannanshire
                                            option(value='81' data-abbreviation='CON') Cornwall
                                            option(value='82' data-abbreviation='CMA') Cumbria
                                            option(value='130' data-abbreviation='DEN') Denbighshire
                                            option(value='83' data-abbreviation='DBY') Derbyshire
                                            option(value='84' data-abbreviation='DEV') Devon
                                            option(value='85' data-abbreviation='DOR') Dorset
                                            option(value='223') Down
                                            option(value='230' data-abbreviation='DOW') Down
                                            option(value='157' data-abbreviation='DFS') Dumfriesshire
                                            option(value='158' data-abbreviation='DNB') Dunbartonshire
                                            option(value='86' data-abbreviation='DUR') Durham
                                            option(value='159' data-abbreviation='ELN') East Lothian
                                            option(value='87' data-abbreviation='SXE') East Sussex
                                            option(value='88' data-abbreviation='ESS') Essex
                                            option(value='231' data-abbreviation='FER') Fermanagh
                                            option(value='224') Fermanagh
                                            option(value='160' data-abbreviation='FIF') Fife
                                            option(value='118' data-abbreviation='FLN') Flintshire
                                            option(value='119' data-abbreviation='GLA') Glamorgan
                                            option(value='89' data-abbreviation='GLS') Gloucestershire
                                            option(value='90' data-abbreviation='LDN') Greater London
                                            option(value='91' data-abbreviation='GTM') Greater Manchester
                                            option(value='92' data-abbreviation='HAM') Hampshire
                                            option(value='164' data-abbreviation='HEF') Herefordshire
                                            option(value='93' data-abbreviation='HRT') Hertfordshire
                                            option(value='161' data-abbreviation='INV') Inverness
                                            option(value='166' data-abbreviation='IOW') Isle of Wight
                                            option(value='94' data-abbreviation='KEN') Kent
                                            option(value='162' data-abbreviation='KCD') Kincardineshire
                                            option(value='163' data-abbreviation='KRS') Kinross-shire
                                            option(value='131' data-abbreviation='KKD') Kirkcudbrightshire
                                            option(value='132' data-abbreviation='LKS') Lanarkshire
                                            option(value='95' data-abbreviation='LAN') Lancashire
                                            option(value='96' data-abbreviation='LEI') Leicestershire
                                            option(value='97' data-abbreviation='LIN') Lincolnshire
                                            option(value='76' data-abbreviation='LON') London
                                            option(value='225') Londonderry
                                            option(value='229' data-abbreviation='LDY') Londonderry
                                            option(value='120' data-abbreviation='MER') Merionethshire
                                            option(value='98' data-abbreviation='MSY') Merseyside
                                            option(value='133' data-abbreviation='MLN') Midlothian
                                            option(value='121' data-abbreviation='MON') Monmouthshire
                                            option(value='122' data-abbreviation='MGY') Montgomeryshire
                                            option(value='134' data-abbreviation='MOR') Moray
                                            option(value='135' data-abbreviation='NAI') Nairnshire
                                            option(value='99' data-abbreviation='NFK') Norfolk
                                            option(value='100' data-abbreviation='NYK') North Yorkshire
                                            option(value='101' data-abbreviation='NTH') Northamptonshire
                                            option(value='220') Northern Ireland
                                            option(value='102' data-abbreviation='NBL') Northumberland
                                            option(value='103' data-abbreviation='NTT') Nottinghamshire
                                            option(value='136' data-abbreviation='OKI') Orkney
                                            option(value='104' data-abbreviation='OXF') Oxfordshire
                                            option(value='137' data-abbreviation='PEE') Peebleshire
                                            option(value='123' data-abbreviation='PEM') Pembrokeshire
                                            option(value='138' data-abbreviation='PER') Perthshire
                                            option(value='124' data-abbreviation='RAD') Radnorshire
                                            option(value='139' data-abbreviation='RFW') Renfrewshire
                                            option(value='140' data-abbreviation='ROC') Ross & Cromarty
                                            option(value='141' data-abbreviation='ROX') Roxburghshire
                                            option(value='167' data-abbreviation='RUT') Rutland
                                            option(value='142' data-abbreviation='SEL') Selkirkshire
                                            option(value='143' data-abbreviation='SHI') Shetland
                                            option(value='105' data-abbreviation='SAL') Shropshire
                                            option(value='106' data-abbreviation='SOM') Somerset
                                            option(value='107' data-abbreviation='SYK') South Yorkshire
                                            option(value='108' data-abbreviation='STS') Staffordshire
                                            option(value='144' data-abbreviation='STI') Stirlingshire
                                            option(value='109' data-abbreviation='SFK') Suffolk
                                            option(value='110' data-abbreviation='SRY') Surrey
                                            option(value='145' data-abbreviation='SUT') Sutherland
                                            option(value='111' data-abbreviation='TWR') Tyne and Wear
                                            option(value='232' data-abbreviation='TYR') Tyrone
                                            option(value='226') Tyrone
                                            option(value='112' data-abbreviation='WAR') Warwickshire
                                            option(value='146' data-abbreviation='WLN') West Lothian
                                            option(value='113' data-abbreviation='WMD') West Midlands
                                            option(value='114' data-abbreviation='SXW') West Sussex
                                            option(value='115' data-abbreviation='WYK') West Yorkshire
                                            option(value='147' data-abbreviation='WIG') Wigtownshire
                                            option(value='116' data-abbreviation='WIL') Wiltshire
                                            option(value='117' data-abbreviation='WOR') Worcestershire
                                          span#states-loading-progress(style='display: none;')
                                            | Wait...
                                            img(src='/Content/Images/ajax_loader_small.gif' alt='Wait...')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.StateProvinceId' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_ZipPostalCode') Postcode
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_ZipPostalCode.catfish-input(data-val='true' data-val-required='Postcode is required.' name='BillingNewAddress.ZipPostalCode' placeholder='Postcode' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.ZipPostalCode' data-valmsg-replace='true')
                                      tr
                                        td.item-name
                                          span.requiredMarker *
                                          label(for='BillingNewAddress_PhoneNumber') Phone number
                                          | :
                                        td.item-value
                                          input#BillingNewAddress_PhoneNumber.catfish-input(name='BillingNewAddress.PhoneNumber' placeholder='Phone number' type='text' value='')
                                          span.field-validation-valid(data-valmsg-for='BillingNewAddress.PhoneNumber' data-valmsg-replace='true')
                                #use-same-shipping-address
                                 
                      script(type='text/javascript').
                        //<![CDATA[
                        Billing.init('#co-billing-form',
                        'https://www.hatchprint.co.uk/checkout/CreateOrUpdateAddress/',
                        'https://www.hatchprint.co.uk/checkout/GetRefreshedAddressUsedForm/',
                        'https://www.hatchprint.co.uk/checkout/OpcSaveBilling/',
                        false,
                        false);
                        if ($("#billing-address-select").length > 0) {
                        Billing.showAddressForm();
                        } else{
                        Billing.initPostCoder(true);
                        }
                        //]]>
                      #billing-buttons-container.buttons.clearfix
                        p.back-link
                          a.catfish-button(href='/cart' )
                            small Â« 
                            | Back
                        button.newaddressnextstepbutton.catfish-button(href='#' onClick='location.href="/delivery";')
                          span Continue
                        span#billing-please-wait.please-wait(style='display: none;')
                          img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Loading next step...' title='Loading next step...')
                          |                                 Loading next step...
                  li#opc-shipping.section.clearfix
                    .sectionheader.clearfix
                      .number 2
                      .step-title
                        h2.title.is-spaced.has-text-centered Delivery address
                    #checkout-step-shipping.step.a-item(style='display: none;')
                      form#co-shipping-form(action='')
                        #checkout-shipping-load
                      script(type='text/javascript').
                        //<![CDATA[
                        Shipping.init('#co-shipping-form',
                        'https://www.hatchprint.co.uk/checkout/CreateOrUpdateAddress/',
                        'https://www.hatchprint.co.uk/checkout/GetRefreshedAddressUsedForm/',
                        'https://www.hatchprint.co.uk/checkout/OpcSaveShipping/',
                        'https://www.hatchprint.co.uk/checkout/OpcUpdateShipping/',
                        'https://www.hatchprint.co.uk/checkout/OpcAddShipping/',
                        'https://www.hatchprint.co.uk/checkout/OpcOneTimeShipping/',
                        false,
                        false,
                        false,
                        "edit-shipping-address",
                        "cancel-edit-shipping-address",
                        "update-shipping-address",
                        "save-as-new-shipping-address",
                        "one-time-shipping-address",
                        "newaddressnextstepbutton",
                        "back-link",
                        false);
                        if ($("#shipping-address-select").length > 0) {
                        Shipping.showAddressForm();
                        }
                        //]]>
                      #shipping-buttons-container.buttons.clearfix
                        p.back-link
                          a.catfish-button(href='/cart' )
                            small Â« 
                            | Back
                        a.newaddressnextstepbutton.catfish-button.theme_bg_colour2.Col2(href='/delivery')
                          span Continue
                        span#shipping-please-wait.please-wait(style='display: none;')
                          img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Loading next step...' title='Loading next step...')
                          |                                 Loading next step...
                  li#opc-shipping_method.section
                    .sectionheader.clearfix
                      .number 3
                      .step-title
                        h2.title.is-spaced.has-text-centered Delivery method
                    #checkout-step-shipping-method.step.a-item(style='display: none;')
                      form#co-shipping-method-form(action='')
                        #checkout-shipping-method-load
                        script(type='text/javascript').
                          //<![CDATA[
                          ShippingMethod.init('#co-shipping-method-form',
                          'https://www.hatchprint.co.uk/checkout/OpcSaveShippingMethod/');
                          //]]>
                        #shipping-method-buttons-container.buttons.clearfix
                          p.back-link
                            a.catfish-button(href='/cart')
                              small Â« 
                              | Back
                          a.shippingmethodnextstepbutton.catfish-button(href='/delivery' )
                            span Continue
                          span#shipping-method-please-wait.please-wait(style='display: none;')
                            img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Loading next step...' title='Loading next step...')
                            |                                         Loading next step...
                  li#opc-payment_method.section
                    .sectionheader.clearfix
                      .number 4
                      .step-title
                        h2.title.is-spaced.has-text-centered Payment method
                    #checkout-step-payment-method.step.a-item(style='display: none;')
                      form#co-payment-method-form(action='')
                        #checkout-payment-method-load
                          | Payment is not required
                      script(type='text/javascript').
                        //<![CDATA[
                        PaymentMethod.init('#co-payment-method-form',
                        'https://www.hatchprint.co.uk/checkout/OpcSavePaymentMethod/');
                        //]]>
                      #payment-method-buttons-container.buttons.clearfix
                        p.back-link
                          a.catfish-button(href='/cart' )
                            small Â« 
                            | Back
                        a.paymentmethodnextstepbutton.catfish-button(href='/delivery')
                          span Continue
                        span#payment-method-please-wait.please-wait(style='display: none;')
                          img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Loading next step...' title='Loading next step...')
                          |                                 Loading next step...
                  li#opc-payment_info.section
                    .sectionheader.clearfix
                      .number 5
                      .step-title.request-after-now
                        h2.title.is-spaced.has-text-centered Payment information
                      .step-title.request-after-confirm
                        h2.title.is-spaced.has-text-centered Payment information (requested after confirmation)
                    #checkout-step-payment-info.step.a-item(style='display: none;')
                      form#co-payment-info-form(action='')
                        #checkout-payment-info-load
                          | Payment is not required
                      script(type='text/javascript').
                        //<![CDATA[
                        PaymentInfo.init('#co-payment-info-form', 'https://www.hatchprint.co.uk/checkout/OpcSavePaymentInfo/');
                        //]]>
                      #payment-info-buttons-container.buttons.clearfix
                        p.back-link
                          a.catfish-button(href='/cart' )
                            small Â« 
                            | Back
                        a.paymentinfonextstepbutton.catfish-button.clearfix(href='/delivery')
                          span Continue
                        span#payment-info-please-wait.please-wait(style='display: none;')
                          img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Loading next step...' title='Loading next step...')
                          |                                 Loading next step...
                    script.
                      function clearErrors(){
                      $('.message-error').empty();
                      }
                      $(document).ready(function (){
                      window.EventBus.addEventListener('purchase-order-clear-errors', clearErrors);
                      });
                  script(type='text/javascript').
                    var bCanHaveConfirmStep = true;
                  li#opc-confirm_order.section(style='')
                    .sectionheader.clearfix
                      .number 6
                      .step-title
                        h2.title.is-spaced.has-text-centered Confirm order
                    #checkout-step-confirm-order.step.a-item(style='display: none;')
                      #checkout-confirm-order-load
                      script(type='text/javascript').
                        //<![CDATA[
                        ConfirmOrder.init('https://www.hatchprint.co.uk/checkout/OpcConfirmOrder/',
                        'https://www.hatchprint.co.uk/checkout/completed/');
                        //]]>
                        // Gift Card -----------------------------------------------
                        // Order Confirm Buttons -----------------------------------------------
                        #confirm-order-buttons-container.buttons.clearfix
                          p.back-link
                            a.catfish-button(href='/cart' )
                              small Â« 
                              | Back
                          button.confirmordernextstepbutton.catfish-button(type='submit' onclick='ConfirmOrder.save()')
                            span Confirm
                          span#confirm-order-please-wait.please-wait(style='display: none;')
                            img(src='/1043303697/Handler/Static/Content/Images/ajax_loader_small.gif' alt='Submitting order information...' title='Submitting order information...')
                            |                             Submitting order information...
        script(type='text/javascript').
          function checkForRecaptcha_guestCheckout(callback){
          if(false)
          {
          ExecuteReCaptcha(event, 'CheckoutAsGuest', function(token) {
          VerifyRecaptchaToken(token, 'CheckoutAsGuest', callback);
          });
          }
          else
          {
          callback();
          }
          }
          window.onload = function() {
          window.addEventListener("beforeunload",
          function(e) {
          var confirmationMessage = 'Are you sure you want to leave this page? Doing so may cause issues with your payment';
          var divExists = false;
          var divVisible = false;
          var divObj = document.getElementById('checkout-step-payment-info');
          if (divObj) {
          divExists = true;
          if (divObj.style.display != "none") {
          divVisible = true;
          }
          }
          if (!divExists || !divVisible) {
          return undefined;
          }
          // divExists
          if (divExists && divVisible) {
          (e || window.event).returnValue = confirmationMessage; //Gecko + IE
          return confirmationMessage; //Gecko + Webkit, Safari, Chrome etc.
          }
          });
          };
          $("html").addClass('OPCCheckout');
          var firstBit = $("#checkoutSteps").children().first().attr("id");
          Accordion.init('checkoutSteps', '.step-title', true);
          Accordion.openSection('#' + firstBit);
          Checkout.init('https://www.hatchprint.co.uk/cart/');
          //Confirm Order Table gets updated
          function refreshOrderConfirmTableData() {
          var obj = {
          url: "/Checkout/OpcConfirmOrderPartial",
          type: "POST",
          dataType: 'html'
          }
          $.ajax(obj).done(function(data) {
          $("#checkout-confirm-order-load").html(data);
          attachLightbox();
          });
          }
          function refeshConfirmation() {
          attachLightbox();
          }
          var errors = [];
          for (var i = 0; i < errors.length; i++) {
          alert(errors[i]);
          }
        #AfterMainContainer.afterMainContainer-inner
